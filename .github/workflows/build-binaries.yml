name: Build and Release Binaries

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            artifact: upid-linux-x86_64
          - os: ubuntu-latest
            arch: aarch64
            artifact: upid-linux-arm64
          - os: macos-latest
            arch: arm64
            artifact: upid-darwin-arm64
          - os: windows-latest
            arch: x86_64
            artifact: upid-windows-x86_64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller rich click requests pyyaml

      - name: Build binary
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            pyinstaller --onefile --name upid-windows-x86_64 upid_main.py
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            pyinstaller --onefile --name upid-darwin-arm64 upid_main.py
          elif [ "${{ matrix.arch }}" = "aarch64" ]; then
            sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
            pyinstaller --onefile --name upid-linux-arm64 upid_main.py
          else
            pyinstaller --onefile --name upid-linux-x86_64 upid_main.py
          fi

      - name: Test binary
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            ./dist/upid-windows-x86_64.exe --help
          else
            chmod +x ./dist/${{ matrix.artifact }}
            ./dist/${{ matrix.artifact }} --help
          fi

      - name: Upload binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/${{ matrix.artifact }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 