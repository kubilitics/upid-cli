name: Build Multi-Platform Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            python-version: '3.10'
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            python-version: '3.10'
          - os: macos-latest
            platform: darwin
            arch: x86_64
            python-version: '3.10'
          - os: macos-latest
            platform: darwin
            arch: arm64
            python-version: '3.10'
          - os: windows-latest
            platform: windows
            arch: x86_64
            python-version: '3.10'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build binary
      run: |
        python -m PyInstaller \
          --onefile \
          --name "upid-${{ matrix.platform }}-${{ matrix.arch }}" \
          --distpath ./dist \
          --workpath ./build \
          --clean \
          --noconfirm \
          upid_main.py

    - name: Test binary
      run: |
        if [ "${{ matrix.platform }}" = "windows" ]; then
          ./dist/upid-${{ matrix.platform }}-${{ matrix.arch }}.exe --help
        else
          chmod +x ./dist/upid-${{ matrix.platform }}-${{ matrix.arch }}
          ./dist/upid-${{ matrix.platform }}-${{ matrix.arch }} --help
        fi

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: upid-${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          dist/upid-${{ matrix.platform }}-${{ matrix.arch }}*
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/upid-*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 