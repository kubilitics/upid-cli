name: Release UPID CLI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install UPX (Linux only)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y upx
    - name: Build Linux binary
      run: |
        pyinstaller --onefile --clean --noconfirm --strip --upx-dir=/usr/bin \
          --exclude-module=tkinter --exclude-module=unittest --exclude-module=pydoc \
          --name upid-linux-x86_64 upid/cli.py
        tar -czf upid-linux-x86_64.tar.gz dist/upid-linux-x86_64 install/install.sh docs/guides/UPID_USER_MANUAL.md docs/guides/UPID_QUICK_REFERENCE.md docs/guides/UPID_INSTALLATION_GUIDE.md
        
    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: upid-linux-x86_64
        path: upid-linux-x86_64.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Install UPX (macOS only)
      if: runner.os == 'macOS'
      run: brew install upx
    - name: Build macOS binary
      run: |
        pyinstaller --onefile --clean --noconfirm --strip --upx-dir=/opt/homebrew/bin \
          --exclude-module=tkinter --exclude-module=unittest --exclude-module=pydoc \
          --name upid-darwin-arm64 upid/cli.py
        tar -czf upid-darwin-arm64.tar.gz dist/upid-darwin-arm64 install/install.sh docs/guides/UPID_USER_MANUAL.md docs/guides/UPID_QUICK_REFERENCE.md docs/guides/UPID_INSTALLATION_GUIDE.md
        
    - name: Upload macOS binary
      uses: actions/upload-artifact@v4
      with:
        name: upid-darwin-arm64
        path: upid-darwin-arm64.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Windows binary
      run: |
        pyinstaller --onefile --clean --noconfirm --exclude-module=tkinter --exclude-module=unittest --exclude-module=pydoc --name upid-windows-x86_64 upid/cli.py
        Compress-Archive -Path "dist/upid-windows-x86_64.exe", "install/install.ps1", "docs/guides/UPID_USER_MANUAL.md", "docs/guides/UPID_QUICK_REFERENCE.md", "docs/guides/UPID_INSTALLATION_GUIDE.md" -DestinationPath "upid-windows-x86_64.zip"
      shell: bash
        
    - name: Upload Windows binary
      uses: actions/upload-artifact@v4
      with:
        name: upid-windows-x86_64
        path: upid-windows-x86_64.zip

  create-release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          upid-linux-x86_64/upid-linux-x86_64.tar.gz
          upid-darwin-arm64/upid-darwin-arm64.tar.gz
          upid-windows-x86_64/upid-windows-x86_64.zip
        body: |
          # UPID CLI ${{ github.ref_name }} - Production Ready Release
          
          ## What's New
          
          UPID CLI ${{ github.ref_name }} represents a complete overhaul from prototype to production-ready Kubernetes intelligence platform. All mock data has been removed and replaced with real implementations.
          
          ### Key Features
          
          - **üîê Enterprise Security**: RBAC, MFA, OIDC, SAML, LDAP, Cloud IAM
          - **ü§ñ ML-Powered Insights**: Real predictions and anomaly detection
          - **üìä Business Intelligence**: KPI tracking and ROI analysis
          - **‚òÅÔ∏è Cloud Integration**: AWS, GCP, and Azure support
          - **üìà Real-time Monitoring**: Live metrics and alerting
          - **üõ†Ô∏è Production Binaries**: Ready-to-use executables
          
          ### Quick Start
          
          ```bash
          # Download and install (macOS/Linux)
          curl -L https://github.com/kubilitics/upid-cli/releases/download/${{ github.ref_name }}/upid-darwin-arm64.tar.gz | tar -xz
          sudo mv upid-darwin-arm64 /usr/local/bin/upid
          
          # Or for Linux
          curl -L https://github.com/kubilitics/upid-cli/releases/download/${{ github.ref_name }}/upid-linux-x86_64.tar.gz | tar -xz
          sudo mv upid-linux-x86_64 /usr/local/bin/upid
          
          # Authenticate
          upid auth login
          
          # Analyze cluster
          upid analyze cluster
          
          # View dashboard
          upid dashboard
          ```
          
          ### Downloads
          
          - **macOS ARM64**: upid-darwin-arm64.tar.gz
          - **Linux x86_64**: upid-linux-x86_64.tar.gz
          - **Windows x86_64**: upid-windows-x86_64.zip
          
          ### Documentation
          
          - [User Manual](docs/guides/UPID_USER_MANUAL.md)
          - [Quick Reference](docs/guides/UPID_QUICK_REFERENCE.md)
          - [Installation Guide](docs/guides/UPID_INSTALLATION_GUIDE.md)
          
          ### System Requirements
          
          - Kubernetes cluster access
          - kubectl configured
          - Python 3.8+ (for optional features)
          - 100MB disk space
          
          ---
          
          **Download and start using UPID CLI ${{ github.ref_name }} today!**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}